"""empty message

Revision ID: 60f02d588ac3
Revises: 5d82cc266963
Create Date: 2020-03-29 00:47:58.090874

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "60f02d588ac3"
down_revision = "5d82cc266963"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "class",
        sa.Column(
            "uuid",
            postgresql.UUID(as_uuid=True),
            server_default=sa.text("uuid_generate_v4()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("uuid", name=op.f("pk_class")),
        sa.UniqueConstraint("uuid", name=op.f("uq_class_uuid")),
    )
    op.create_table(
        "class_translation",
        sa.Column(
            "id",
            postgresql.UUID(as_uuid=True),
            server_default=sa.text("uuid_generate_v4()"),
            nullable=False,
        ),
        sa.Column("class_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("locale", sa.String(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["class_id"],
            ["class.uuid"],
            name=op.f("fk_class_translation_class_id_class"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_class_translation")),
        sa.UniqueConstraint("id", name=op.f("uq_class_translation_id")),
    )
    op.create_index(
        op.f("ix_class_translation_class_id"),
        "class_translation",
        ["class_id"],
        unique=False,
    )
    op.create_table(
        "spell_variant_pair",
        sa.Column(
            "uuid",
            postgresql.UUID(as_uuid=True),
            server_default=sa.text("uuid_generate_v4()"),
            nullable=False,
        ),
        sa.Column("class_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["class_id"],
            ["class.uuid"],
            name=op.f("fk_spell_variant_pair_class_id_class"),
        ),
        sa.PrimaryKeyConstraint("uuid", name=op.f("pk_spell_variant_pair")),
        sa.UniqueConstraint("uuid", name=op.f("uq_spell_variant_pair_uuid")),
    )
    op.create_table(
        "spell",
        sa.Column(
            "uuid",
            postgresql.UUID(as_uuid=True),
            server_default=sa.text("uuid_generate_v4()"),
            nullable=False,
        ),
        sa.Column(
            "spell_variant_pair_id", postgresql.UUID(as_uuid=True), nullable=False
        ),
        sa.Column("image_url", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["spell_variant_pair_id"],
            ["spell_variant_pair.uuid"],
            name=op.f("fk_spell_spell_variant_pair_id_spell_variant_pair"),
        ),
        sa.PrimaryKeyConstraint("uuid", name=op.f("pk_spell")),
        sa.UniqueConstraint("uuid", name=op.f("uq_spell_uuid")),
    )
    op.create_index(
        op.f("ix_spell_spell_variant_pair_id"),
        "spell",
        ["spell_variant_pair_id"],
        unique=False,
    )
    op.create_table(
        "spell_stats",
        sa.Column(
            "uuid",
            postgresql.UUID(as_uuid=True),
            server_default=sa.text("uuid_generate_v4()"),
            nullable=False,
        ),
        sa.Column("spell_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("level", sa.Integer(), nullable=False),
        sa.Column("ap_cost", sa.Integer(), nullable=False),
        sa.Column("cooldown", sa.Integer(), nullable=True),
        sa.Column("base_crit_chance", sa.Integer(), nullable=True),
        sa.Column("casts_per_turn", sa.Integer(), nullable=True),
        sa.Column("casts_per_target", sa.Integer(), nullable=True),
        sa.Column("needs_los", sa.Boolean(), nullable=False),
        sa.Column("has_modifiable_range", sa.Boolean(), nullable=False),
        sa.Column("is_linear", sa.Boolean(), nullable=False),
        sa.Column("needs_free_cell", sa.Boolean(), nullable=False),
        sa.Column("min_range", sa.Integer(), nullable=True),
        sa.Column("max_range", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["spell_id"], ["spell.uuid"], name=op.f("fk_spell_stats_spell_id_spell")
        ),
        sa.PrimaryKeyConstraint("uuid", name=op.f("pk_spell_stats")),
    )
    op.create_table(
        "spell_translation",
        sa.Column(
            "uuid",
            postgresql.UUID(as_uuid=True),
            server_default=sa.text("uuid_generate_v4()"),
            nullable=False,
        ),
        sa.Column("spell_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("locale", sa.String(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["spell_id"],
            ["spell.uuid"],
            name=op.f("fk_spell_translation_spell_id_spell"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("uuid", name=op.f("pk_spell_translation")),
    )
    op.create_table(
        "spell_effect",
        sa.Column(
            "uuid",
            postgresql.UUID(as_uuid=True),
            server_default=sa.text("uuid_generate_v4()"),
            nullable=False,
        ),
        sa.Column("spell_stat_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column(
            "effect_type",
            postgresql.ENUM(
                "NEUTRAL_DAMAGE",
                "EARTH_DAMAGE",
                "FIRE_DAMAGE",
                "WATER_DAMAGE",
                "AIR_DAMAGE",
                "NEUTRAL_STEAL",
                "EARTH_STEAL",
                "FIRE_STEAL",
                "WATER_STEAL",
                "AIR_STEAL",
                "AP",
                "MP",
                "HP_RESTORED",
                "SHIELD",
                "PUSHBACK_DAMAGE",
                name="spelleffecttypes",
                create_type=False,
            ),
            nullable=False,
        ),
        sa.Column("min_damage", sa.Integer(), nullable=True),
        sa.Column("max_damage", sa.Integer(), nullable=False),
        sa.Column("crit_min_damage", sa.Integer(), nullable=True),
        sa.Column("crit_max_damage", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["spell_stat_id"],
            ["spell_stats.uuid"],
            name=op.f("fk_spell_effect_spell_stat_id_spell_stats"),
        ),
        sa.PrimaryKeyConstraint("uuid", name=op.f("pk_spell_effect")),
    )
    op.create_table(
        "spell_stat_translation",
        sa.Column(
            "uuid",
            postgresql.UUID(as_uuid=True),
            server_default=sa.text("uuid_generate_v4()"),
            nullable=False,
        ),
        sa.Column("spell_stat_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("locale", sa.String(), nullable=False),
        sa.Column("aoe_type", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["spell_stat_id"],
            ["spell_stats.uuid"],
            name=op.f("fk_spell_stat_translation_spell_stat_id_spell_stats"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("uuid", name=op.f("pk_spell_stat_translation")),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("spell_stat_translation")
    op.drop_table("spell_effect")
    op.drop_table("spell_translation")
    op.drop_table("spell_stats")
    op.drop_index(op.f("ix_spell_spell_variant_pair_id"), table_name="spell")
    op.drop_table("spell")
    op.drop_table("spell_variant_pair")
    op.drop_index(op.f("ix_class_translation_class_id"), table_name="class_translation")
    op.drop_table("class_translation")
    op.drop_table("class")
    # ### end Alembic commands ###
